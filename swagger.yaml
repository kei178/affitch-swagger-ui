# This is an **example** API to demonstrate features of OpenAPI specification.
# It doesn't cover all OpenAPI features. For more full example check out: https://github.com/APIs-guru/petstore_extended

openapi: 3.0.2
info:
  version: "1.0.0" # Your API version
  # It can be any string but it is better to use semantic versioning: http://semver.org/
  # Warning: OpenAPI requires the version to be a string, but without quotation marks YAML can recognize it as a number.

  title: Affitch API # Replace with your API title
  # Keep it simple. Don't add "API" or version at the end of the string.

  contact:
    url: "https://affitch.com/contact" # [Optional] Replace with link to your contact form

  x-logo:
    url: "https://redocly.github.io/openapi-template/logo.png"

  # Describe your API here, you can use GFM (https://guides.github.com/features/mastering-markdown) here
  description: |
    This is an **example** API to demonstrate features of OpenAPI specification
    # Introduction
    This API definition is intended to to be a good starting point for describing your API in 
    [OpenAPI/Swagger format](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md).
    It also demonstrates features of [create-openapi-repo](https://github.com/Redocly/create-openapi-repo) tool and 
    [Redoc](https://github.com/Redocly/Redoc) documentation engine. So beyond the standard OpenAPI syntax we use a few 
    [vendor extensions](https://github.com/Redocly/Redoc/blob/master/docs/redoc-vendor-extensions.md).

    # OpenAPI Specification
    The goal of The OpenAPI Specification is to define a standard, language-agnostic interface to REST APIs which
    allows both humans and computers to discover and understand the capabilities of the service without access to source
    code, documentation, or through network traffic inspection. When properly defined via OpenAPI, a consumer can 
    understand and interact with the remote service with a minimal amount of implementation logic. Similar to what
    interfaces have done for lower-level programming, OpenAPI removes the guesswork in calling the service.
externalDocs:
  description: Find out how to create a GitHub repo for your OpenAPI definition.
  url: "https://github.com/Rebilly/generator-openapi-repo"

# A list of tags used by the definition with additional metadata.
# The order of the tags can be used to reflect on their order by the parsing tools.
tags:
  - name: Affiliate
    description: アフィリエイトのAPI
  - name: Conversion
    description: コンバージョンのAPI
  - name: Payout
    description: 報酬支払のAPI
servers:
  - url: "https://api.affitch.com/v1"

paths:
  "/conversions":
    get:
      tags:
        - Conversion

      summary: コンバージョン一覧

      description: |
        コンバージョンの一覧を取得します。

      operationId: listConversions

      parameters:
        - name: page
          in: query
          description: ページ番号
          required: false
          schema:
            type: number
        - name: page_size
          in: query
          description: 1ページあたりの件数
          required: false
          schema:
            type: number
            maximum: 100
            default: 20

      security:
        - api_key: []

      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/conversion"

  "/conversions/{id}":
    get:
      tags:
        - Conversion

      summary: コンバージョン詳細

      description: |
        コンバージョン1件のデータを取得します。

      operationId: getConversion

      parameters:
        - name: id
          in: path
          description: コンバージョンID
          required: true
          schema:
            type: string

      security:
        - api_key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/conversion"
        "403":
          description: Forbidden
        "404":
          description: Conversion not found

  "/conversions/{id}/approve":
    post:
      tags:
        - Conversion

      summary: コンバージョン承認

      description: |
        コンバージョン1件のステータスを「承認」に更新します。

      operationId: approveConversion

      parameters:
        - name: id
          in: path
          description: コンバージョンID
          required: true
          schema:
            type: string

      security:
        - api_key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
            schema:
              type: object
              properties:
                conversions:
                  type: array
                  items:
                    $ref: "#/components/schemas/conversion"
                meta:
                  type: object
                  properties:
                    pagination:
                      $ref: "#/components/schemas/pagination"
        "403":
          description: Forbidden

  "/conversions/{id}/reject":
    post:
      tags:
        - Conversion

      summary: コンバージョン拒否

      description: |
        コンバージョン1件のステータスを「拒否」に更新します。

      operationId: rejectConversion

      parameters:
        - name: id
          in: path
          description: コンバージョンID
          required: true
          schema:
            type: string

      security:
        - api_key: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                conversion:
                  type: object
                  properties:
                    comment:
                      type: string
                      description: 承認拒否の理由（アフィリエイトには表示されません。）
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/conversion"
        "403":
          description: Forbidden
        "404":
          description: Conversion not found
        "422":
          description: Status must be PENDING

components:
  schemas:
    id:
      description: ID
      type: string
      example: 01HRB68JC8185BJ6MPQMM71H9C
    created_at:
      description: 作成日時
      type: string
      example: 2024-01-01T00:00:00Z
    pagination:
      type: object
      properties:
        page:
          type: number
          example: 1
        total_pages:
          type: number
          example: 10
        total_count:
          type: number
          example: 100
        has_previous:
          type: boolean
          example: true
        has_next:
          type: boolean
          example: true
    conversion:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/id"
        kind:
          description: 種類
          type: string
          enum:
            - CLICK
            - DISCOUNT_CODE
            - RECURRING
          example: CLICK
        status:
          description: ステータス
          type: string
          enum:
            - PENDING
            - APPROVED
            - REJECTED
          example: PENDING
        amount:
          description: 注文金額
          type: number
          example: 10000
        commission:
          description: 報酬金額
          type: number
          example: 1000
        commission_rate:
          description: 報酬レート(%)
          type: number
          example: 10.0
        comment:
          description: 承認拒否の理由
          type: string
          example: 返金注文（自動拒否）
        order_number:
          description: Shopify 注文番号
          type: number
          example: 1001
        order_id:
          description: Shopify 注文ID
          type: number
          example: 5916298510497
        created_at:
          $ref: "#/components/schemas/created_at"
        affiliate_id:
          description: アフィリエイト参照ID
          type: string
          example: 01HRB7TCSJNCGZKDCGY1G2R2JP
        payout_id:
          description: 報酬支払参照ID
          type: string
          example: 01J48WN09KC6PT954DMMVN9707
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: x_api_key
